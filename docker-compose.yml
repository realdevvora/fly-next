services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web
    env_file:
      - .env

  # New migration service that runs before the web service
  migrations:
    build:
      context: ./my-app
      dockerfile: Dockerfile
      target: runner
    command: npx prisma migrate deploy
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    restart: "no"

  web:
    build:
      context: ./my-app
      dockerfile: Dockerfile
      target: runner
    expose:
      - "3000"
    ports:
      - "3000:3000"
    env_file:
      - .env
    volumes:
      - uploads_volume:/app/public/uploads # Volume for persistent uploads
    depends_on:
      migrations:
        condition: service_completed_successfully
      db:
        condition: service_healthy

  db:
    image: postgres:15
    expose:
      - "5433"
    ports:
      - "5433:5433"
    command: ["postgres", "-p", "5433"]
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-myapp}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -p 5433"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  uploads_volume: # Volume definition